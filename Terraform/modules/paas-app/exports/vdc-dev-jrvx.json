{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "azureFirewalls_vdc_dev_jrvx_iag_name": {
            "defaultValue": "vdc-dev-jrvx-iag",
            "type": "String"
        },
        "components_vdc_dev_jrvx_insights_name": {
            "defaultValue": "vdc-dev-jrvx-insights",
            "type": "String"
        },
        "storageAccounts_vdcdevjrvxstorage_name": {
            "defaultValue": "vdcdevjrvxstorage",
            "type": "String"
        },
        "virtualMachines_vdc_dev_jrvx_bastion_name": {
            "defaultValue": "vdc-dev-jrvx-bastion",
            "type": "String"
        },
        "applicationGateways_vdc_dev_jrvx_waf_name": {
            "defaultValue": "vdc-dev-jrvx-waf",
            "type": "String"
        },
        "routeTables_vdc_dev_jrvx_mgmt_routes_name": {
            "defaultValue": "vdc-dev-jrvx-mgmt-routes",
            "type": "String"
        },
        "storageAccounts_vdcdevjrvxautomation_name": {
            "defaultValue": "vdcdevjrvxautomation",
            "type": "String"
        },
        "publicIPAddresses_vdc_dev_jrvx_iag_pip_name": {
            "defaultValue": "vdc-dev-jrvx-iag-pip",
            "type": "String"
        },
        "publicIPAddresses_vdc_dev_jrvx_vpn_pip_name": {
            "defaultValue": "vdc-dev-jrvx-vpn-pip",
            "type": "String"
        },
        "publicIPAddresses_vdc_dev_jrvx_waf_pip_name": {
            "defaultValue": "vdc-dev-jrvx-waf-pip",
            "type": "String"
        },
        "virtualNetworks_vdc_dev_jrvx_hub_network_name": {
            "defaultValue": "vdc-dev-jrvx-hub-network",
            "type": "String"
        },
        "networkInterfaces_vdc_dev_jrvx_bastion_if_name": {
            "defaultValue": "vdc-dev-jrvx-bastion-if",
            "type": "String"
        },
        "networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name": {
            "defaultValue": "vdc-dev-jrvx-mgmt-nsg",
            "type": "String"
        },
        "automationAccounts_vdc_dev_jrvx_automation_name": {
            "defaultValue": "vdc-dev-jrvx-automation",
            "type": "String"
        },
        "virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name": {
            "defaultValue": "vdc-dev-jrvx-iaas-spoke-network",
            "type": "String"
        },
        "virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name": {
            "defaultValue": "vdc-dev-jrvx-paas-spoke-network",
            "type": "String"
        },
        "workspaces_vdc_dev_jrvx_loganalytics_name": {
            "defaultValue": "vdc-dev-jrvx-loganalytics",
            "type": "String"
        },
        "routeTables_vdc_dev_jrvx_iaas_spoke_network_routes_name": {
            "defaultValue": "vdc-dev-jrvx-iaas-spoke-network-routes",
            "type": "String"
        },
        "routeTables_vdc_dev_jrvx_paas_spoke_network_routes_name": {
            "defaultValue": "vdc-dev-jrvx-paas-spoke-network-routes",
            "type": "String"
        },
        "networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name": {
            "defaultValue": "vdc-dev-jrvx-iaas-spoke-network-nsg",
            "type": "String"
        },
        "networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name": {
            "defaultValue": "vdc-dev-jrvx-paas-spoke-network-nsg",
            "type": "String"
        },
        "solutions_Updates(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "Updates(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_ServiceMap(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "ServiceMap(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_AntiMalware(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "AntiMalware(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "publicIPAddresses_vdc_dev_jrvx_hub_network_managed_bastion_pip_name": {
            "defaultValue": "vdc-dev-jrvx-hub-network-managed-bastion-pip",
            "type": "String"
        },
        "solutions_AzureActivity(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "AzureActivity(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_AzureAutomation(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "AzureAutomation(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_AzureNetworking(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "AzureNetworking(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_AzureNSGAnalytics(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "AzureNSGAnalytics(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_NetworkMonitoring(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "NetworkMonitoring(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_SecurityCenterFree(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "SecurityCenterFree(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "publicIPAddresses_vdc_dev_jrvx_iaas_spoke_network_managed_bastion_pip_name": {
            "defaultValue": "vdc-dev-jrvx-iaas-spoke-network-managed-bastion-pip",
            "type": "String"
        },
        "publicIPAddresses_vdc_dev_jrvx_paas_spoke_network_managed_bastion_pip_name": {
            "defaultValue": "vdc-dev-jrvx-paas-spoke-network-managed-bastion-pip",
            "type": "String"
        },
        "solutions_ApplicationInsights(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "ApplicationInsights(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        },
        "solutions_AzureAppGatewayAnalytics(vdc_dev_jrvx_loganalytics)_name": {
            "defaultValue": "AzureAppGatewayAnalytics(vdc-dev-jrvx-loganalytics)",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2015-10-31",
            "name": "[parameters('automationAccounts_vdc_dev_jrvx_automation_name')]",
            "location": "westeurope",
            "properties": {}
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('components_vdc_dev_jrvx_insights_name')]",
            "location": "westeurope",
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "kind": "Web",
            "properties": {
                "Application_Type": "Web"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "c9dcf204-ac84-42b9-8739-308dff81f9d7",
                "securityRules": [
                    {
                        "name": "AllowAllfromRFC1918A",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "10.0.0.0/8",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAllfromRFC1918B",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "192.168.0.0/16",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoRFC1918B",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "192.168.0.0/16",
                            "access": "Allow",
                            "priority": 204,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoRFC1918C",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "172.16.0.0/12",
                            "access": "Allow",
                            "priority": 205,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoRFC1918A",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "10.0.0.0/8",
                            "access": "Allow",
                            "priority": 203,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoInternet",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "0-65535",
                            "destinationPortRange": "0-65535",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 290,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAllfromRFC1918C",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "172.16.0.0/12",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAllfromVDC",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoVDC",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 201,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"88ba9aac-f53f-4be4-ad56-2624c104042a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "48aee1bf-e88c-4ce0-9594-d6207941da4b",
                "securityRules": [
                    {
                        "name": "AllowRDPOutbound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "10.0.2.128/26",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSSHOutbound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "10.0.2.128/26",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 106,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAllTCPfromVPN",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "192.168.0.0/24",
                            "destinationAddressPrefix": "10.0.2.128/26",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"3af53154-6c99-4b6a-8969-9fdd8073414d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "e02da4e2-e3f6-4964-ab70-c3bc164c7e9a",
                "securityRules": [
                    {
                        "name": "AllowAllfromRFC1918A",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "10.0.0.0/8",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAllfromRFC1918B",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "192.168.0.0/16",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoRFC1918B",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "192.168.0.0/16",
                            "access": "Allow",
                            "priority": 204,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoRFC1918C",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "172.16.0.0/12",
                            "access": "Allow",
                            "priority": 205,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoRFC1918A",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "10.0.0.0/8",
                            "access": "Allow",
                            "priority": 203,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoInternet",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "0-65535",
                            "destinationPortRange": "0-65535",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 290,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAllfromRFC1918C",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "172.16.0.0/12",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAllfromVDC",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAlltoVDC",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 201,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"e9756d1d-3fb6-4e51-80f6-3c4760f81cd1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[parameters('publicIPAddresses_vdc_dev_jrvx_hub_network_managed_bastion_pip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "e283ad86-252a-4c2a-9629-6a44bcff7953",
                "ipAddress": "40.74.0.121",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[parameters('publicIPAddresses_vdc_dev_jrvx_iaas_spoke_network_managed_bastion_pip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "f36d9e6f-ec10-40c1-b628-d73782762f55",
                "ipAddress": "40.74.3.25",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[parameters('publicIPAddresses_vdc_dev_jrvx_iag_pip_name')]",
            "location": "westeurope",
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "a0c6442c-ec56-4653-a8af-1f51fb2797ec",
                "ipAddress": "40.119.150.147",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "vzhateypnekwystb",
                    "fqdn": "vzhateypnekwystb.westeurope.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[parameters('publicIPAddresses_vdc_dev_jrvx_paas_spoke_network_managed_bastion_pip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "3a4caded-6637-4ea2-8f67-603dc9723d3a",
                "ipAddress": "40.74.4.111",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[parameters('publicIPAddresses_vdc_dev_jrvx_vpn_pip_name')]",
            "location": "westeurope",
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "77454f4a-6468-497f-9b49-cf7d01cbdee9",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[parameters('publicIPAddresses_vdc_dev_jrvx_waf_pip_name')]",
            "location": "westeurope",
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "5e0bcee2-a081-443a-872d-7af2e6a923c8",
                "ipAddress": "40.119.151.146",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "gyebqdjhfjdhxnhr",
                    "fqdn": "gyebqdjhfjdhxnhr.westeurope.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-06-01",
            "name": "[parameters('routeTables_vdc_dev_jrvx_iaas_spoke_network_routes_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "VnetLocal",
                        "etag": "W/\"088bc72c-394d-47e3-9ffd-0a1fed2c8f1b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.1.0.0/16",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "AllViaHub",
                        "etag": "W/\"088bc72c-394d-47e3-9ffd-0a1fed2c8f1b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.0.4"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-06-01",
            "name": "[parameters('routeTables_vdc_dev_jrvx_mgmt_routes_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "InternetViaIAG",
                        "etag": "W/\"18d6a825-448b-4fbe-9bde-449113da8703\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.0.4"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-06-01",
            "name": "[parameters('routeTables_vdc_dev_jrvx_paas_spoke_network_routes_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "VnetLocal",
                        "etag": "W/\"9c899bd9-bbb3-47a8-a47e-5ee2c848dd8d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.2.0.0/16",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "AllViaHub",
                        "etag": "W/\"9c899bd9-bbb3-47a8-a47e-5ee2c848dd8d\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.0.4"
                        }
                    }
                ]
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('workspaces_vdc_dev_jrvx_loganalytics_name')]",
            "location": "westeurope",
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "properties": {
                "source": "Azure",
                "customerId": "a617e72e-7cfd-457f-ae13-7e5f139704cd",
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "standalone"
                },
                "retentionInDays": 90
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_vdcdevjrvxautomation_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "isHnsEnabled": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_vdcdevjrvxstorage_name')]",
            "location": "westeurope",
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "isHnsEnabled": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connectionTypes",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Azure')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "isGlobal": true,
                "fieldDefinitions": {
                    "AutomationCertificateName": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "SubscriptionID": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connectionTypes",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureClassicCertificate')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "isGlobal": true,
                "fieldDefinitions": {
                    "SubscriptionName": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "SubscriptionId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "CertificateAssetName": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connectionTypes",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureServicePrincipal')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "isGlobal": true,
                "fieldDefinitions": {
                    "ApplicationId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "TenantId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "CertificateThumbprint": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "SubscriptionId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AuditPolicyDsc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Azure')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Azure.Storage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureRM.Automation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureRM.Compute')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureRM.Profile')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureRM.Resources')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureRM.Sql')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/AzureRM.Storage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/ComputerManagementDsc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/GPRegistryPolicyParser')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Microsoft.PowerShell.Core')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Microsoft.PowerShell.Diagnostics')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Microsoft.PowerShell.Management')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Microsoft.PowerShell.Security')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Microsoft.PowerShell.Utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Microsoft.WSMan.Management')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/Orchestrator.AssetManagement.Cmdlets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/PSDscResources')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/SecurityPolicyDsc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/StateConfigCompositeResources')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/xDSCDomainjoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/xPowerShellExecutionPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_vdc_dev_jrvx_automation_name'), '/xRemoteDesktopAdmin')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_vdc_dev_jrvx_bastion_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vdc_dev_jrvx_bastion_if_name'))]"
            ],
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "identity": {
                "principalId": "d4f48a34-79c2-4d9c-ae7c-fbde1ca40061",
                "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_vdc_dev_jrvx_bastion_name'), '-osdisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "writeAcceleratorEnabled": false,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vdc_dev_jrvx_bastion_name'), '-osdisk'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(parameters('virtualMachines_vdc_dev_jrvx_bastion_name'), '-datadisk')]",
                            "createOption": "Empty",
                            "caching": "None",
                            "writeAcceleratorEnabled": false,
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS",
                                "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vdc_dev_jrvx_bastion_name'), '-datadisk'))]"
                            },
                            "diskSizeGB": 1023,
                            "toBeDetached": false
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "bastion",
                    "adminUsername": "vdcadmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "additionalUnattendContent": [
                            {
                                "passName": "oobeSystem",
                                "componentName": "Microsoft-Windows-Shell-Setup",
                                "settingName": "FirstLogonCommands"
                            }
                        ]
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vdc_dev_jrvx_bastion_if_name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('virtualMachines_vdc_dev_jrvx_bastion_name'), '/bastion_bginfo')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vdc_dev_jrvx_bastion_name'))]"
            ],
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "BGInfo",
                "typeHandlerVersion": "2.1"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[parameters('networkInterfaces_vdc_dev_jrvx_bastion_if_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), 'Management')]"
            ],
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "c25d8c79-69e3-4d05-97a4-3f74eb22122f",
                "ipConfigurations": [
                    {
                        "name": "bas_ipconfig",
                        "etag": "W/\"b178b38f-03e3-47ab-aee0-eff36d626b86\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.2.132",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), 'Management')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "h2c2nmpiegzuxbgxifog2ydzch.ax.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-27-E9-C3",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "primary": true,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAllfromRFC1918A')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "10.0.0.0/8",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 103,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAllfromRFC1918A')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "10.0.0.0/8",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 103,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAllfromRFC1918B')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "192.168.0.0/16",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 104,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAllfromRFC1918B')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "192.168.0.0/16",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 104,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAllfromRFC1918C')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "172.16.0.0/12",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 105,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAllfromRFC1918C')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "172.16.0.0/12",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 105,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAllfromVDC')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAllfromVDC')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name'), '/AllowAllTCPfromVPN')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "192.168.0.0/24",
                "destinationAddressPrefix": "10.0.2.128/26",
                "access": "Allow",
                "priority": 104,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAlltoInternet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "0-65535",
                "destinationPortRange": "0-65535",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 290,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAlltoInternet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "0-65535",
                "destinationPortRange": "0-65535",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 290,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAlltoRFC1918A')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "10.0.0.0/8",
                "access": "Allow",
                "priority": 203,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAlltoRFC1918A')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "10.0.0.0/8",
                "access": "Allow",
                "priority": 203,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAlltoRFC1918B')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "192.168.0.0/16",
                "access": "Allow",
                "priority": 204,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAlltoRFC1918B')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "192.168.0.0/16",
                "access": "Allow",
                "priority": 204,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAlltoRFC1918C')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "172.16.0.0/12",
                "access": "Allow",
                "priority": 205,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAlltoRFC1918C')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "172.16.0.0/12",
                "access": "Allow",
                "priority": 205,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'), '/AllowAlltoVDC')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_iaas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 201,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'), '/AllowAlltoVDC')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_paas_spoke_network_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 201,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name'), '/AllowRDPOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "10.0.2.128/26",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 105,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name'), '/AllowSSHOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vdc_dev_jrvx_mgmt_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "10.0.2.128/26",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 106,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('routeTables_vdc_dev_jrvx_iaas_spoke_network_routes_name'), '/AllViaHub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_vdc_dev_jrvx_iaas_spoke_network_routes_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.0.4"
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('routeTables_vdc_dev_jrvx_paas_spoke_network_routes_name'), '/AllViaHub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_vdc_dev_jrvx_paas_spoke_network_routes_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.0.4"
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('routeTables_vdc_dev_jrvx_mgmt_routes_name'), '/InternetViaIAG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_vdc_dev_jrvx_mgmt_routes_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.0.4"
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('routeTables_vdc_dev_jrvx_iaas_spoke_network_routes_name'), '/VnetLocal')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_vdc_dev_jrvx_iaas_spoke_network_routes_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.1.0.0/16",
                "nextHopType": "VnetLocal"
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('routeTables_vdc_dev_jrvx_paas_spoke_network_routes_name'), '/VnetLocal')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_vdc_dev_jrvx_paas_spoke_network_routes_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.2.0.0/16",
                "nextHopType": "VnetLocal"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "3940dc6f-01ce-4784-9717-75577808d5af",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "AzureBastionSubnet",
                        "etag": "W/\"dda7f2a4-52cb-49da-b412-84a1b1a58eaa\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.1.255.192/27",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "app",
                        "etag": "W/\"dda7f2a4-52cb-49da-b412-84a1b1a58eaa\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.1.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "data",
                        "etag": "W/\"dda7f2a4-52cb-49da-b412-84a1b1a58eaa\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.1.2.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'), '-spoke2hub')]",
                        "etag": "W/\"dda7f2a4-52cb-49da-b412-84a1b1a58eaa\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "b5e44247-8b5e-43ae-9132-8d324d15b85c",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "AzureBastionSubnet",
                        "etag": "W/\"081a642e-a12a-4809-aead-dca7d54f877c\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.2.255.192/27",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "appservice",
                        "etag": "W/\"081a642e-a12a-4809-aead-dca7d54f877c\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.2.1.0/24",
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "etag": "W/\"081a642e-a12a-4809-aead-dca7d54f877c\"",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms",
                                        "actions": [
                                            "Microsoft.Network/virtualNetworks/subnets/action"
                                        ]
                                    }
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'), '-spoke2hub')]",
                        "etag": "W/\"081a642e-a12a-4809-aead-dca7d54f877c\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'), '/app')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.1.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'), '/appservice')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.2.1.0/24",
                "delegations": [
                    {
                        "name": "delegation",
                        "etag": "W/\"081a642e-a12a-4809-aead-dca7d54f877c\"",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms",
                            "actions": [
                                "Microsoft.Network/virtualNetworks/subnets/action"
                            ]
                        }
                    }
                ],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.255.192/27",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.1.255.192/27",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.2.255.192/27",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.0.0/26",
                "serviceEndpoints": [
                    {
                        "provisioningState": "Succeeded",
                        "service": "Microsoft.EventHub",
                        "locations": [
                            "*"
                        ]
                    },
                    {
                        "provisioningState": "Succeeded",
                        "service": "Microsoft.Sql",
                        "locations": [
                            "westeurope"
                        ]
                    },
                    {
                        "provisioningState": "Succeeded",
                        "service": "Microsoft.Storage",
                        "locations": [
                            "westeurope",
                            "northeurope"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'), '/data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.1.2.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.3.224/27",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), '/Management')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.2.128/26",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), '/WAFSubnet1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.1.64/26",
                "serviceEndpoints": [
                    {
                        "provisioningState": "Succeeded",
                        "service": "Microsoft.Web",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/AntiMalware(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_MalwareByThreat')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Malware detected grouped by 'threat",
                "Category": "AntiMalware",
                "Query": "search in (ProtectionStatus) ThreatStatus != \"No threats detected\" | summarize AggregatedValue = count() by Threat // Oql: Type=ProtectionStatus NOT (ThreatStatus=\"No threats detected\") | Measure count() by Threat",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/AntiMalware(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_ProtectionStatusUpdatesPerDay')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Protection Status updates per day",
                "Category": "AntiMalware",
                "Query": "search in (ProtectionStatus) * | summarize AggregatedValue = count(ScanDate) by bin(TimeGenerated, 1d) | sort by TimeGenerated desc // Oql: Type=ProtectionStatus | Measure count(ScanDate) interval 1DAY | Sort TimeGenerated desc",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/AntiMalware(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_SignatureOutOfDateDevices')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Devices with Signatures out of date",
                "Category": "AntiMalware",
                "Query": "search in (ProtectionStatus) * | summarize Rank = max(ProtectionStatusRank) by Computer | limit 500000 | where Rank == \"250\" // Oql: Type=ProtectionStatus | measure max(ProtectionStatusRank) as Rank by Computer | top 500000 | where Rank:250",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All Computers with their most recent data",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Which Management Group is generating the most data points?",
                "Category": "General Exploration",
                "Query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Distribution of data Types",
                "Category": "General Exploration",
                "Query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Stale Computers (data older than 24 hours)",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events",
                "Category": "Log Management",
                "Query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslogs",
                "Category": "Log Management",
                "Query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by Facility",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by ProcessName",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records with Errors",
                "Category": "Log Management",
                "Query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by HTTP Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP Request Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP User Agent",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Host requested by client",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "Category": "Log Management",
                "Query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows breakdown of response codes",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Log",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Source",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events containing the word \"started\" grouped by EventID",
                "Category": "Log Management",
                "Query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Find the maximum time taken for each page",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "Category": "Log Management",
                "Query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All IIS Log Entries",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "How many connections to Operations Manager's SDK service by day",
                "Category": "Log Management",
                "Query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "When did my servers initiate restart?",
                "Category": "Log Management",
                "Query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows which pages people are getting a 404 for",
                "Category": "Log Management",
                "Query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows servers that are throwing internal server error",
                "Category": "Log Management",
                "Query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each Azure Role Instance",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each IIS Computer",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes sent by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events with level \"Warning\"",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Windows Firewall Policy settings have changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/LogManagement(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_AutomaticUpdateConfiguration')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Automatic update configuration",
                "Category": "Updates",
                "Query": "search in (UpdateSummary) * | summarize AggregatedValue = count() by WindowsUpdateSetting // Oql: Type=UpdateSummary | measure count() by WindowsUpdateSetting",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_ComputerWithMissingUpdates')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All computers with missing updates",
                "Category": "Updates",
                "Query": "search in (Update) OSType != \"Linux\" and UpdateState == \"Needed\" and Optional == \"false\" | project Computer, Title, KBID, Classification, UpdateSeverity, PublishedDate | sort by TimeGenerated desc // Oql: Type=Update OSType!=Linux UpdateState=Needed Optional=false | select Computer,Title,KBID,Classification,UpdateSeverity,PublishedDate",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_DistinctMissingUpdatesCrossComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Distinct missing updates across all computers",
                "Category": "Updates",
                "Query": "search in (Update) OSType != \"Linux\" and UpdateState == \"Needed\" and Optional == \"false\" | distinct Title // Oql: Type=Update OSType!=Linux UpdateState=Needed Optional=false | Distinct Title",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_ErrorEventOnComputerMissingSecurityOrCriticalUpdate')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Error events for machines that have missing critical or security required updates",
                "Category": "Updates",
                "Query": "search in (Event) EventLevelName == \"error\" and Computer in ((search in (Update) (Classification == \"Security Updates\" or Classification == \"Critical Updates\") and UpdateState == \"Needed\" and Optional == \"false\" | distinct Computer)) | sort by TimeGenerated desc // Oql: Type=Event EventLevelName=error Computer IN {Type=Update (Classification=\"Security Updates\" OR Classification=\"Critical Updates\") UpdateState=Needed Optional=false | Distinct Computer}",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_MissingCriticalSecurityUpdates')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All computers with missing critical or security updates",
                "Category": "Updates",
                "Query": "search in (Update) OSType != \"Linux\" and UpdateState == \"Needed\" and Optional == \"false\" and (Classification == \"Security Updates\" or Classification == \"Critical Updates\") | sort by TimeGenerated desc // Oql: Type=Update OSType!=Linux UpdateState=Needed Optional=false (Classification=\"Security Updates\" OR Classification=\"Critical Updates\")",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_MissingRequiredUpdatesForServer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Missing updates for computer \"COMPUTER01.contoso.com\" (replace with your own computer name)",
                "Category": "Updates",
                "Query": "search in (Update) OSType != \"Linux\" and UpdateState == \"Needed\" and Optional == \"false\" and Computer == \"COMPUTER01.contoso.com\" | project Computer, Title, KBID, Product, UpdateSeverity, PublishedDate | sort by TimeGenerated desc // Oql: Type=Update OSType!=Linux UpdateState=Needed Optional=false Computer=\"COMPUTER01.contoso.com\" | select Computer,Title,KBID,Product,UpdateSeverity,PublishedDate",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_MissingSecurityOrCriticalWhereUpdateIsManual')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "Critical or security updates needed by machines where updates are manually applied",
                "Category": "Updates",
                "Query": "search in (Update) OSType != \"Linux\" and UpdateState == \"Needed\" and Optional == \"false\" and (Classification == \"Security Updates\" or Classification == \"Critical Updates\") and Computer in ((search in (UpdateSummary) WindowsUpdateSetting == \"Manual\" | distinct Computer)) | distinct KBID // Oql: Type=Update OSType!=Linux UpdateState=Needed Optional=false (Classification=\"Security Updates\" OR Classification=\"Critical Updates\") Computer IN {Type=UpdateSummary WindowsUpdateSetting=Manual | Distinct Computer} | Distinct KBID",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_MissingUpdateRollups')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "All computers with missing update rollups",
                "Category": "Updates",
                "Query": "search in (Update) OSType != \"Linux\" and Optional == \"false\" and Classification == \"Update Rollups\" and UpdateState == \"Needed\" | project Computer, Title, KBID, Classification, UpdateSeverity, PublishedDate | sort by TimeGenerated desc // Oql: Type=Update OSType!=Linux Optional=false Classification=\"Update Rollups\" UpdateState=Needed | select Computer,Title,KBID,Classification,UpdateSeverity,PublishedDate",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/Updates(', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), ')_MissingUpdateSpecificProduct')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "properties": {
                "DisplayName": "WSUS computer membership",
                "Category": "Updates",
                "Query": "search in (UpdateSummary) * | summarize AggregatedValue = count() by WSUSServer // Oql: Type=UpdateSummary | measure count() by WSUSServer",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_AntiMalware(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "AntiMalware(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/AntiMalware",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_AntiMalware(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_ApplicationInsights(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "ApplicationInsights(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/ApplicationInsights",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_ApplicationInsights(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_AzureActivity(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "AzureActivity(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/AzureActivity",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_AzureActivity(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_AzureAppGatewayAnalytics(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "AzureAppGatewayAnalytics(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/AzureAppGatewayAnalytics",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_AzureAppGatewayAnalytics(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_AzureAutomation(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "AzureAutomation(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/AzureAutomation",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_AzureAutomation(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_AzureNetworking(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "AzureNetworking(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/AzureNetworking",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_AzureNetworking(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_AzureNSGAnalytics(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "AzureNSGAnalytics(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/AzureNSGAnalytics",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_AzureNSGAnalytics(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_NetworkMonitoring(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "NetworkMonitoring(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/NetworkMonitoring",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_NetworkMonitoring(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SecurityCenterFree(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "SecurityCenterFree(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/SecurityCenterFree",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": []
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_ServiceMap(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "ServiceMap(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/ServiceMap",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_ServiceMap(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_Updates(vdc_dev_jrvx_loganalytics)_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]"
            ],
            "plan": {
                "name": "Updates(vdc-dev-jrvx-loganalytics)",
                "promotionCode": "",
                "product": "OMSGallery/Updates",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name')), concat('/views/', parameters('solutions_Updates(vdc_dev_jrvx_loganalytics)_name')))]"
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_vdcdevjrvxautomation_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vdcdevjrvxautomation_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_vdcdevjrvxstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vdcdevjrvxstorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-06-01",
            "name": "[parameters('applicationGateways_vdc_dev_jrvx_waf_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), 'WAFSubnet1')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vdc_dev_jrvx_waf_pip_name'))]"
            ],
            "tags": {
                "application": "Automated VDC",
                "environment": "dev",
                "provisioner": "terraform",
                "release-id": "",
                "release-url": "",
                "release-user": "",
                "workspace": "default"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "5b16fd82-6f0d-4afc-b7d3-50a104dade2c",
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2",
                    "capacity": 2
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "waf-ip-configuration",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), 'WAFSubnet1')]"
                            }
                        },
                        "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "ioteric-com",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "publicCertData": "MIIWRwYJKoZIhvcNAQcCoIIWODCCFjQCAQExADALBgkqhkiG9w0BBwGgghYcMIIGWjCCBUKgAwIBAgIRAKtFRM32jv+WLXfERbaLscQwDQYJKoZIhvcNAQELBQAwgZAxCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMTYwNAYDVQQDEy1DT01PRE8gUlNBIERvbWFpbiBWYWxpZGF0aW9uIFNlY3VyZSBTZXJ2ZXIgQ0EwHhcNMTgxMjI2MDAwMDAwWhcNMTkxMjI2MjM1OTU5WjBbMSEwHwYDVQQLExhEb21haW4gQ29udHJvbCBWYWxpZGF0ZWQxHjAcBgNVBAsTFUVzc2VudGlhbFNTTCBXaWxkY2FyZDEWMBQGA1UEAwwNKi5pb3RlcmljLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMLn2atnR7nSVH3+ZUsb3gyPsrMFEhSxsC0mxQtC96u4zGpZhBBgjbSHuAJMmA10IS0ouVFXRLu87as1go5DwjfE1A1a/eY/J3m0BREVuxTQ9VY9qesp56HF1GCGwaLPH9ub626gmpn4ERFHXk3e9Shtfleo4HCmTV2c+15ei8rd0zOl0L/yajHgm0ty4QjGAbAUjWvIBpva806rAQFa4jCCBCoJIEqMYZ3C8X1pPl6i90hOa8fN3rXD6ffzz7ofGWC6DWQPVCYJB31QsPyb4X7bfREy0S2H1R+j8XzqWp3U6f6vqpCxEOANOAulmNDsuF9fdBmAzg8q8K7QinBVgZ0CAwEAAaOCAuEwggLdMB8GA1UdIwQYMBaAFJCvajqUWgvYkOoSVnPfQ7Q6KNrnMB0GA1UdDgQWBBR8uG6LCzqVfmI6+G4tYPr1JehYTTAOBgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH/BAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwTwYDVR0gBEgwRjA6BgsrBgEEAbIxAQICBzArMCkGCCsGAQUFBwIBFh1odHRwczovL3NlY3VyZS5jb21vZG8uY29tL0NQUzAIBgZngQwBAgEwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDovL2NybC5jb21vZG9jYS5jb20vQ09NT0RPUlNBRG9tYWluVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNybDCBhQYIKwYBBQUHAQEEeTB3ME8GCCsGAQUFBzAChkNodHRwOi8vY3J0LmNvbW9kb2NhLmNvbS9DT01PRE9SU0FEb21haW5WYWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3J0MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wJQYDVR0RBB4wHIINKi5pb3RlcmljLmNvbYILaW90ZXJpYy5jb20wggEGBgorBgEEAdZ5AgQCBIH3BIH0APIAdwC72d+8H4pxtZOUI5eqkntHOFeVCqtS6BqQlmQ2jh7RhQAAAWfp570xAAAEAwBIMEYCIQD83uGKEmeEDca75rRTURrbfTHchT8IstPhHEloT1GGuQIhAKqUKT6FYeX5ZyJFAzK9Q9Gb4Gv29auxdgb3RqvSvUwYAHcAdH7agzGtMxCRIZzOJU9CcMK//V5CIAjGNzV55hB7zFYAAAFn6ee9fAAABAMASDBGAiEA0e5tXuPhW7BE6bIVY1SmkAPkYOChNexxAe4Zb3efxCACIQD1TmTc5r2OhrJuy9qWFiPZTxBOE7OEwyHCvMUn8RZ2szANBgkqhkiG9w0BAQsFAAOCAQEAKlnW+KNdkJ01g71OOyjh3rWjg49X8Bxourr8dYooWvaUwvDqjCqTt7qzC7Zeq2BNg85u0SamXWkuOpt0wqGpe+6ZOYG+3bp5X5l9YFUwPHmXEoy9E+NWYMRvf/NGwY1SQZnWvytlHDOw3JeFgKIxax26KWXDMT4KbEEp6LpMNP7fe9ihT+POCab1LCCJ27Vbo/qu3A/QRbgo/cQyeqUyvP7NUvQIy1ISQbhiE60AAjmvoxSDW9tgpfvkxvxGf2oNPaQEAkL6V+UcrZHGWt2IoUQGGT+XYANhJi92OZdKJ+krUcwnqGYvarqlxQC4mWeJAHsw3ZRiRVLgqHTzL91RAjCCBggwggPwoAMCAQICECsuburZdTZsFIpu26N8jAcwDQYJKoZIhvcNAQEMBQAwgYUxCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMSswKQYDVQQDEyJDT01PRE8gUlNBIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTE0MDIxMjAwMDAwMFoXDTI5MDIxMTIzNTk1OVowgZAxCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMTYwNAYDVQQDEy1DT01PRE8gUlNBIERvbWFpbiBWYWxpZGF0aW9uIFNlY3VyZSBTZXJ2ZXIgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCOwgIZ4aBZpOs4NY0s/QHQ00nAZMcLYgVFFjqooMAMAn8dzNvEoW13A6MPhvnjBpw+C4GKm0kbrQO++kvbjCDt1c5eZY4+Da9MwrC3RV5SLzTeSCRktEGuAJf3vmfentB6p1OAO3yt9ZZVb5dHCnyFiyKXjbOE4JZX0HAYYJaP7i0Hk52husrRzXvpxCqaKCGRTW+STyWl8no13SbcRqXQrFk1jP9OkUNQP1mTHmxRIe5YFKv+dVB4PkywHIYT+muYvOA7lB6FUtwDkyQYbssnUUXmcN4lQ6QN4Uql7bZ+yM1t7i4dJ3Nd3EUwgKrjskELr71Eh9q55Rudf67lhYKlAgMBAAGjggFlMIIBYTAfBgNVHSMEGDAWgBS7r34CPfqm8TyEjq3uOJjs2TIy1DAdBgNVHQ4EFgQUkK9qOpRaC9iQ6hJWc99DtDoo2ucwDgYDVR0PAQH/BAQDAgGGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBsGA1UdIAQUMBIwBgYEVR0gADAIBgZngQwBAgEwTAYDVR0fBEUwQzBBoD+gPYY7aHR0cDovL2NybC5jb21vZG9jYS5jb20vQ09NT0RPUlNBQ2VydGlmaWNhdGlvbkF1dGhvcml0eS5jcmwwcQYIKwYBBQUHAQEEZTBjMDsGCCsGAQUFBzAChi9odHRwOi8vY3J0LmNvbW9kb2NhLmNvbS9DT01PRE9SU0FBZGRUcnVzdENBLmNydDAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29tMA0GCSqGSIb3DQEBDAUAA4ICAQBOK3ZPkhxiNom6d8EnBfQc1kSdqZo+qtVmZgE+6knmojW8+vbdlY6ZNZgONhh1sd3dUHJ8rtx3iM4P95AgyqNnLh9Wf3vhROpClcRdDQFQRhXygYlZbIrdjPESoY06QoqY+Es0eyc7CLRvJDtynWN0WDwabD9PxxGayKj1tTfvEEXGbNngXpUms+uto7nufwyaZjVzMmBO5d2KYSxuUhF3aJbTGHVRFQAbdIjd4cc4BEMo6Rb92QXUXUcnYNb7ODtscqKU+EIa3+1vBoxFwgYAquTo3Nm14XN47PYj3NHdbI4aj6XqVHyWt8P+VY6NSV78ZLvPPr2W62nNv+BI8WKCEOUMRlfyM9rQyGPtxh+UBZZKGpHR9+vPj1KuDQjZPqigUenBh3TVyfd0qy5T+7t6+5fi+B8mj7PSoOA3Wyg7MeUOVy1auK15rF4gZhqluaa1OcH1mEP/7vmnp/3uyiQ9gBbEF4+KwWChDK5bQ0eRS9WaF1/51IfBwoy35+IPMBk3hqzg3EID5pSona79DyRRlM6SCNH8UPADQHuIWe0O3azSd4I03AaVAtiQ+S3qN9UaYNBnINfYQgtFr4Jo3t1mJDeQKZQZRhkluIDXy9SGKGpEcCYjYqmfhm+/upBw0lZ3hXjv6iWpF85QcowAOqrj22M0n/gGcQHigiDU/m+9sTCCBXQwggRcoAMCAQICECdm7lbrSfOOq9dwovyE3iIwDQYJKoZIhvcNAQEMBQAwbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9vdDAeFw0wMDA1MzAxMDQ4MzhaFw0yMDA1MzAxMDQ4MzhaMIGFMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01PRE8gQ0EgTGltaXRlZDErMCkGA1UEAxMiQ09NT0RPIFJTQSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJHoVJLSClaxrA0k3cXPRGd0mSs3o30jcABxvFPfxPoqEo9LfxBWvZ9wcrdhf8lLDxenPeOwBGHu/xGXx/SGPgr6Plz5k+Y0etkUa+ecs4Wggnp2r3GQ1+z9DfqcbPrfsIL0FH75vsSmL09/mX+1/GdDcr0MANaJ62ss0+2PmBwUq37l42782KjkkiTaQ2tiuFX96sG8bLaL8w6NmuSbbGmZ+HhIMEXVreENPEVg/DKWUSe8Z8PKLrZr6kbHxyCgsR9l3kgIuqROqfKDRjeE6+jMgUhDZ05yKptcvUwbKIpcInu0q5jZ7uBRg8MJRk5tPpn6lRfafDNXQTyNUe0LtlyvLGMa31fIP7zpXcSbr0WZ4qNaJLS6qVY9z2+q/0lYvvCo//S4rek3+7q49As6+ehDQh6J2ITLE/HZu+GJYLiMKFasFB2cCudx688O3T2plqFIvTz3r7UNIkzAEYHsVjv206LiW7eyBCJSlYCTaeiOTGXxkQMtcHQC6otnFSlpUgK7199QalVGv6CjKGF/cNDDoqosIapHziicBkV2v4IYJ7TVrrTLUOZr9EyGcTDppt8WhuDY/0Dd+9BCiH+jMzouXB5BEYFjzhhxayvspoq3MVw6akfgw3lZ1iAar/JqmKpyvFdK0kuduxD8sExB5e0dPV4onZzMv7NR2qdH5YRTAgMBAAGjgfQwgfEwHwYDVR0jBBgwFoAUrb2YejS0Jvf6xCZU7wO94CTLVBowHQYDVR0OBBYEFLuvfgI9+qbxPISOre44mOzZMjLUMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MBEGA1UdIAQKMAgwBgYEVR0gADBEBgNVHR8EPTA7MDmgN6A1hjNodHRwOi8vY3JsLnVzZXJ0cnVzdC5jb20vQWRkVHJ1c3RFeHRlcm5hbENBUm9vdC5jcmwwNQYIKwYBBQUHAQEEKTAnMCUGCCsGAQUFBzABhhlodHRwOi8vb2NzcC51c2VydHJ1c3QuY29tMA0GCSqGSIb3DQEBDAUAA4IBAQBkv4PxX5qF0M24oSlXDeha99HpPvJ2BG7xUnC7Hjz/TQ10asyBgiXTw6AqXUz1uouhbcRUCXXH4ycOXYR5N0ATd/W0rBzQO6sXEtbvNBh+K+l506tXRQyvKPrQ2+VQlYi734VXaX2S2FLKc4G/HPPmuG5mEQWzHpQtf5GVklnxTM6jkXFMfEcMOwsZ9qGxbIY+XKrELoLL+QeWukhNkPKUyKlzousGeyOd3qLzTVWfemFFmBhox15AayP1eXrvjLVri7dvRvR78T1LBNiTgFla4EEkHbKPFWBYR9vvbkb9FfXZX5qz29i45ECzzZc5roW7HY683Ieb0abv8TtvEDhvMIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFsIFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEwNDgzOFowbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3GjPm8gAELTngTlvtH7xsD821+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCwSXrbLpX9uMq/NzgtHj6RQa1wVsfwTz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzXmk6vBbOmcZSccbNQYArHE504B4YCqOmoaSYYkKtMsE8jqzpPhNjfzp/haW+710LXa0Tkx63ubUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy2xSoRcRdKn23tNbE7qzNE0S3ySvdQwAl+mG5aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv77+ldU9U0WicCAwEAAaOB3DCB2TAdBgNVHQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYDVR0PBAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wgZkGA1UdIwSBkTCBjoAUrb2YejS0Jvf6xCZU7wO94CTLVBqhc6RxMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsxIjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZlj7DYd7usQWxHYINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw56wwCURQtjr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvCNr4TDea9Y355e6cJDUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEXc4g/VhsxOBi0cQ+azcgOno4uG+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5amnkPIAou1Z5jJh5VkpTYghdae9C8x49OhgQxAA=="
                        },
                        "type": "Microsoft.Network/applicationGateways/sslCertificates"
                    }
                ],
                "trustedRootCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "vdc-dev-iaasapp-jrvx-ip-configuration",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vdc_dev_jrvx_waf_pip_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "http",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "port": 80
                        },
                        "type": "Microsoft.Network/applicationGateways/frontendPorts"
                    },
                    {
                        "name": "https",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "port": 443
                        },
                        "type": "Microsoft.Network/applicationGateways/frontendPorts"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "vdc-dev-iaasapp-jrvx-webservers",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.1.1.5"
                                },
                                {
                                    "ipAddress": "10.1.1.6"
                                }
                            ]
                        },
                        "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "vdc-dev-iaasapp-jrvx-config",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "path": "/",
                            "requestTimeout": 1
                        },
                        "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
                    }
                ],
                "httpListeners": [
                    {
                        "name": "vdc-dev-iaasapp-jrvx-http-listener",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/frontendIPConfigurations/vdc-dev-iaasapp-jrvx-ip-configuration')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/frontendPorts/http')]"
                            },
                            "protocol": "Http",
                            "requireServerNameIndication": false,
                            "customErrorConfigurations": []
                        },
                        "type": "Microsoft.Network/applicationGateways/httpListeners"
                    },
                    {
                        "name": "vdc-dev-iaasapp-jrvx-https-listener",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/frontendIPConfigurations/vdc-dev-iaasapp-jrvx-ip-configuration')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/frontendPorts/https')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/sslCertificates/ioteric-com')]"
                            },
                            "hostName": "vdcdevapp.ioteric.com",
                            "requireServerNameIndication": false,
                            "customErrorConfigurations": []
                        },
                        "type": "Microsoft.Network/applicationGateways/httpListeners"
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "vdc-dev-iaasapp-jrvx-http-to-https-rule",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/httpListeners/vdc-dev-iaasapp-jrvx-http-listener')]"
                            },
                            "redirectConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/redirectConfigurations/vdc-dev-iaasapp-jrvx-http-to-https')]"
                            }
                        },
                        "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
                    },
                    {
                        "name": "vdc-dev-iaasapp-jrvx-https-rule",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/httpListeners/vdc-dev-iaasapp-jrvx-https-listener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/backendAddressPools/vdc-dev-iaasapp-jrvx-webservers')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/backendHttpSettingsCollection/vdc-dev-iaasapp-jrvx-config')]"
                            }
                        },
                        "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
                    }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [
                    {
                        "name": "vdc-dev-iaasapp-jrvx-http-to-https",
                        "etag": "W/\"c4fda755-56f2-408c-9ad8-0baf5d94b058\"",
                        "properties": {
                            "redirectType": "Temporary",
                            "targetListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/httpListeners/vdc-dev-iaasapp-jrvx-https-listener')]"
                            },
                            "includePath": false,
                            "includeQueryString": false,
                            "requestRoutingRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_vdc_dev_jrvx_waf_name')), '/requestRoutingRules/vdc-dev-iaasapp-jrvx-http-to-https-rule')]"
                                }
                            ]
                        },
                        "type": "Microsoft.Network/applicationGateways/redirectConfigurations"
                    }
                ],
                "sslPolicy": {
                    "disabledSslProtocols": []
                },
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Detection",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0",
                    "disabledRuleGroups": [],
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "enableHttp2": false,
                "customErrorConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2019-06-01",
            "name": "[parameters('azureFirewalls_vdc_dev_jrvx_iag_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vdc_dev_jrvx_iag_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), 'AzureFirewallSubnet')]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "threatIntelMode": "Alert",
                "ipConfigurations": [
                    {
                        "name": "iag_ipconfig",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vdc_dev_jrvx_iag_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [
                    {
                        "name": "[concat(parameters('azureFirewalls_vdc_dev_jrvx_iag_name'), '-net-out-rules')]",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "priority": 101,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowDNStoGoogleFromAppSubnet",
                                    "protocols": [
                                        "UDP",
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.1.0/24"
                                    ],
                                    "destinationAddresses": [
                                        "8.8.4.4",
                                        "8.8.8.8"
                                    ],
                                    "destinationPorts": [
                                        "53"
                                    ]
                                },
                                {
                                    "name": "AllowAllOutboundFromAppSubnet",
                                    "protocols": [
                                        "UDP",
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.1.0/24"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "destinationPorts": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "[concat(parameters('azureFirewalls_vdc_dev_jrvx_iag_name'), '-app-rules')]",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "priority": 200,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "Allow vdcdevpaasappjrvxstorage Storage",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "vdcdevpaasappjrvxstorage.z6.web.core.windows.net",
                                        "vdcdevpaasappjrvxstorage.file.core.windows.net",
                                        "vdcdevpaasappjrvxstorage.dfs.core.windows.net",
                                        "vdcdevpaasappjrvxstorage.queue.core.windows.net",
                                        "vdcdevpaasappjrvxstorage.table.core.windows.net",
                                        "vdcdevpaasappjrvxstorage.blob.core.windows.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.2.0/24",
                                        "10.0.2.128/26",
                                        "10.1.1.0/24",
                                        "192.168.0.0/24"
                                    ]
                                },
                                {
                                    "name": "Allow vdcdevpaasappjrvxeventhub Event Hub HTTPS",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*vdcdevpaasappjrvxeventhub.servicebus.windows.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.2.0/24",
                                        "10.0.2.128/26",
                                        "10.1.1.0/24",
                                        "192.168.0.0/24"
                                    ]
                                },
                                {
                                    "name": "Allow Azure DevOps",
                                    "description": "The VSTS/Azure DevOps agent installed on application VM's requires outbound access. This agent is used by Azure Pipelines for application deployment",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "vstsagentpackage.azureedge.net",
                                        "login.microsoftonline.com",
                                        "management.core.windows.net",
                                        "*.visualstudio.com",
                                        "*.dev.azure.com",
                                        "dev.azure.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.2.0/24",
                                        "10.0.2.128/26",
                                        "10.1.1.0/24",
                                        "192.168.0.0/24"
                                    ]
                                },
                                {
                                    "name": "Allow Packaging tools",
                                    "description": "The packaging (e.g. Chocolatey, NuGet) tools",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "nuget.org",
                                        "download.microsoft.com",
                                        "*.ubuntu.com",
                                        "*.chocolatey.org",
                                        "onegetcdn.azureedge.net",
                                        "*.hashicorp.com",
                                        "packages.microsoft.com",
                                        "*.nuget.org",
                                        "chocolatey.org"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.2.0/24",
                                        "10.0.2.128/26",
                                        "10.1.1.0/24",
                                        "192.168.0.0/24"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "natRuleCollections": [
                    {
                        "name": "[concat(parameters('azureFirewalls_vdc_dev_jrvx_iag_name'), '-fwd-rules')]",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "priority": 100,
                            "action": {
                                "type": "Dnat"
                            },
                            "rules": [
                                {
                                    "name": "AllowInboundRDPtoBastion",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "translatedAddress": "10.0.2.132",
                                    "translatedPort": "3389",
                                    "sourceAddresses": [
                                        "13.93.114.99/32",
                                        "13.93.9.74/32",
                                        "217.105.141.50/32",
                                        "62.140.132.0/23",
                                        "104.40.0.0/13",
                                        "137.116.0.0/15",
                                        "80.255.240.0/20",
                                        "194.69.100.0/22",
                                        "145.103.0.0/16",
                                        "104.211.211.109/32"
                                    ],
                                    "destinationAddresses": [
                                        "40.119.150.147"
                                    ],
                                    "destinationPorts": [
                                        "28934"
                                    ]
                                },
                                {
                                    "name": "AllowInboudHttp",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "translatedAddress": "10.1.1.4",
                                    "translatedPort": "80",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [
                                        "40.119.150.147"
                                    ],
                                    "destinationPorts": [
                                        "81"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "b1c6053f-21e8-4bb3-84d7-415c6e607917",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "WAFSubnet1",
                        "etag": "W/\"aa3fb37e-8df8-48d4-89ba-40d567a3705a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.1.64/26",
                            "serviceEndpoints": [
                                {
                                    "provisioningState": "Succeeded",
                                    "service": "Microsoft.Web",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "etag": "W/\"aa3fb37e-8df8-48d4-89ba-40d567a3705a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.0.0/26",
                            "serviceEndpoints": [
                                {
                                    "provisioningState": "Succeeded",
                                    "service": "Microsoft.EventHub",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "provisioningState": "Succeeded",
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "westeurope"
                                    ]
                                },
                                {
                                    "provisioningState": "Succeeded",
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "westeurope",
                                        "northeurope"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "etag": "W/\"aa3fb37e-8df8-48d4-89ba-40d567a3705a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.3.224/27",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "etag": "W/\"aa3fb37e-8df8-48d4-89ba-40d567a3705a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.255.192/27",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "Management",
                        "etag": "W/\"aa3fb37e-8df8-48d4-89ba-40d567a3705a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.2.128/26",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "vdc-dev-jrvx-iaas-spoke-network-hub2spoke",
                        "etag": "W/\"aa3fb37e-8df8-48d4-89ba-40d567a3705a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        }
                    },
                    {
                        "name": "vdc-dev-jrvx-paas-spoke-network-hub2spoke",
                        "etag": "W/\"aa3fb37e-8df8-48d4-89ba-40d567a3705a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), '/vdc-dev-jrvx-iaas-spoke-network-hub2spoke')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'), '/', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'), '-spoke2hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_iaas_spoke_network_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'), '/vdc-dev-jrvx-paas-spoke-network-hub2spoke')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'), '/', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'), '-spoke2hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_paas_spoke_network_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vdc_dev_jrvx_hub_network_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces/linkedservices",
            "apiVersion": "2015-11-01-preview",
            "name": "[concat(parameters('workspaces_vdc_dev_jrvx_loganalytics_name'), '/automation')]",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_vdc_dev_jrvx_loganalytics_name'))]",
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            ],
            "properties": {
                "resourceId": "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_vdc_dev_jrvx_automation_name'))]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_vdcdevjrvxstorage_name'), '/default/insights-logs-applicationgatewayaccesslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_vdcdevjrvxstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vdcdevjrvxstorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_vdcdevjrvxstorage_name'), '/default/insights-logs-azurefirewall')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_vdcdevjrvxstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vdcdevjrvxstorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_vdcdevjrvxstorage_name'), '/default/insights-logs-networksecuritygroupevent')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_vdcdevjrvxstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vdcdevjrvxstorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_vdcdevjrvxstorage_name'), '/default/insights-logs-networksecuritygrouprulecounter')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_vdcdevjrvxstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vdcdevjrvxstorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_vdcdevjrvxstorage_name'), '/default/insights-metrics-pt1m')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_vdcdevjrvxstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vdcdevjrvxstorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}