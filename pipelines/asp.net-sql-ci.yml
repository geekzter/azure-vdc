# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'apps/PaaS-ASP.NET-SQLDB/DotNetAppSqlDb.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
  displayName: 'Scan for Credentials'
  inputs:
    debugMode: false

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build ASP.NET App'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Test ASP.NET App'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Extract WebDeploy zip
- task: ExtractFiles@1
  displayName: 'Extract WebDeploy package'
  inputs:
    archiveFilePatterns: '$(build.artifactstagingdirectory)\*.zip'
    destinationFolder: '$(agent.builddirectory)\package'
    cleanDestinationFolder: true

# Now create a zip of just wwwroot
- task: ArchiveFiles@2
  displayName: 'Create ZipDeploy package'
  inputs:
    rootFolderOrFile: '$(agent.builddirectory)\package\Content\D_C\a\1\s\apps\PaaS-ASP.NET-SQLDB\DotNetAppSqlDb\obj\Release\Package\PackageTmp'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(build.artifactstagingdirectory)\ZipDeploy.zip'
    replaceExistingArchive: true

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: aspnetsql

# Publish as Pipeline artifact, so tools such as az cli can download it
- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifacts'
  inputs:
    targetPath: '$(build.artifactstagingdirectory)'
    artifact: 'aspnetsql2'
    publishLocation: 'pipeline'