# This pipeline perfors a full CI test of the VDC:
#  - Provision infrastructure
#  - Deploy application
#  - Test application
#  - Destroy infrastructure

  
# Global variables shared by all jobs
variables:
- group: 'vdc'
  # 'vdc-ci' contains build (non-release) settings
- group: 'vdc-ci'
  # 'vdc-vanity-domain' contains certificate, domain information
- name: 'pipelineEnvironment'
  value: 'vdc-test2'
- name: 'scriptDirectory'
  value: '$(Build.SourcesDirectory)/scripts'

jobs:
# First things first, we need to check whether the environment is ready to deploy to
- job: 'DeployEnvironmentPrep'
  displayName: 'Prepare Environment'
  condition: succeeded()

  variables:
    iaasResourceGroup: 'vdc-tst2-iaasapp-b3943'
    tag: 'web'
    timeOutSeconds: 120

  pool:
    # SqlAzureDacpacDeployment@1 only runs on Windows
    vmImage: 'ubuntu-latest'

  steps:
    # If applications are deployed, wait for environment agents to come online
    - task: AzureCLI@2
      name: waitforagents
      displayName: 'Wait for environment agents to come online'
      enabled: true
      inputs:
        azureSubscription: '$(subscriptionConnection)'
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          #Write-Output $(System.AccessToken) | az devops login --organization $(System.TeamFoundationCollectionUri)
          #$(scriptDirectory)/wait_for_agents.ps1 -ResourceGroup $(iaasResourceGroup) -TimeoutSeconds $(timeOutSeconds)
          $(scriptDirectory)/wait_for_agents.ps1 -Environment $(pipelineEnvironment) -OrganizationUrl $(System.TeamFoundationCollectionUri) -Project $(System.TeamProject) -Tag $(tag) -TimeoutSeconds $(timeOutSeconds)
        useGlobalConfig: true
        failOnStandardError: true
        workingDirectory: '$(scriptDirectory)'
      env:
        # Use Pipeline token to access Azure DevOps
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
