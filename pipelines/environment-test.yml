# This pipeline perfors a full CI test of the VDC:
#  - Provision infrastructure
#  - Deploy application
#  - Test application
#  - Destroy infrastructure

# Global variables shared by all jobs
variables:
  # Variable Groups are referenced, but defined elsewhere (Library)

  # This pipeline assumes TF_VAR_* variables are defined in Variable Groups defined in Library
  # The Terraform VDC project requires quite a number of settings, see:
  # https://github.com/geekzter/azure-vdc/blob/master/terraform/variables.tf
  # https://github.com/geekzter/azure-vdc/blob/master/terraform/config.auto.tfvars.sample
  # https://github.com/geekzter/azure-vdc/blob/master/terraform/ci.tfvars
  # i.e. settings in these files should be captured in (a) variable group(s)
  # These can be provided as TF_VAR_<input-variable> environment variables:
  # https://www.terraform.io/docs/configuration/variables.html#environment-variables
  # 'vdc' contains global settings common to all VDC pipelines
- group: 'vdc'
  # 'vdc-ci' contains build (non-release) settings
- group: 'vdc-ci'
  # 'vdc-vanity-domain' contains certificate, domain information
- group: 'vdc-vanity-domain'

- name: 'ARM_PROVIDER_STRICT'
  value: 'true'
- name: 'TF_IN_AUTOMATION'
  value: 'true'
- name: 'TF_INPUT'
  value: 0
- name: 'TF_WORKSPACE'
  value: ${{ parameters.workspace }}
- name: 'TF_VAR_resource_environment'
  value: ''
- name: 'TF_VAR_use_pipeline_environment'
  value: 'true'

# Inline variables shared across jobs
  # This references this pipeline:
  # https://github.com/geekzter/dotnetcore-sqldb-tutorial/blob/master/azure-pipelines.yml
- name: 'appArtifectProject'
  value: '0b7ba88e-1ad0-4782-839e-850e9a4b53c7'
- name: 'jobTimeOutMinutes'
  value: 180
- name: 'scriptDirectory'
  value: '$(Build.SourcesDirectory)/scripts'
- name: 'system.debug'
  value: ${{ parameters.debug }}
- name: 'iaasResourceGroup'
  value: '$(TF_VAR_resource_prefix)-$(TF_VAR_resource_environment)-iaasapp-$(TF_VAR_resource_suffix)'
- name: 'paasResourceGroup'
  value: '$(TF_VAR_resource_prefix)-$(TF_VAR_resource_environment)-paasapp-$(TF_VAR_resource_suffix)'
- name: 'vdcResourceGroup' 
  value: '$(TF_VAR_resource_prefix)-$(TF_VAR_resource_environment)-$(TF_VAR_resource_suffix)'
- name: 'pipelineEnvironment'
  value: 'vdc-${{ parameters.workspace }}'

#- stage: deploy
jobs:
- deployment: DeployWeb
  displayName: deploy Web App
  pool:
    vmImage: 'Ubuntu-latest'
  # creates an environment if it doesn't exist
  environment: 'vdc-ci'
  strategy:
    runOnce:
      deploy:
        steps:
        - script: echo Hello world